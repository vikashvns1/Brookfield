@page "/DynamicView"
@using System.Data;
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Grids
@inherits DynamicViewBase
@using System.Dynamic

<h3>@Tital</h3>

@if (paramList != null)
{
    int i = 0;
    string name="u";

    <div>
        
        @foreach (var item in paramList)
        {
            <label>@item.Name</label>
            <input type="@item.Type" class="input-group-sm" />
                        i++;
           
        }

        @*<button type="submit" @onclick="submitedata">Submit</button>*@

        @code {



            [Parameter]
            public DataTable dt { get; set; }
            string display = "d-none";

            //void submitedata()
            //{
            //    dt = GetUserList("", "", value[0], value[1], value[2]);
            //    if (dt.Rows.Count > 0)
            //    {
            //        List<Models.UserInfo> studentList = new List<Models.UserInfo>();
            //        for (int i = 0; i < dt.Rows.Count; i++)
            //        {
            //            Models.UserInfo student = new Models.UserInfo();
            //            student.UserId = Convert.ToInt32(dt.Rows[i]["UserId"]);
            //            student.FirstName = dt.Rows[i]["FirstName"].ToString();
            //            student.LastName = dt.Rows[i]["LastName"].ToString();
            //            student.UserName = dt.Rows[i]["UserName"].ToString();
            //            student.Email = dt.Rows[i]["Email"].ToString();
            //            student.Password = dt.Rows[i]["Password"].ToString();
            //            student.CreatedDate = Convert.ToDateTime(dt.Rows[i]["CreatedDate"].ToString());
            //            studentList.Add(student);
            //        }

            //        UserInfo = studentList;
            //        display = "";
            //    }
            //    else
            //        display = "d-none";
            //}

        }

    </div>
}
<div class="card mb-3 @display">

    @if (DynamicObject == null)
    {
        <p><em>Loading.......</em></p>
    }
    else
    {
        <SfButton OnClick="ExcelExport" Content="Excel Export" CssClass="e-success"></SfButton> <SfButton CssClass="e-success" OnClick="PdfExport" Content="Pdf Export"></SfButton>
        <SfGrid DataSource="@DynamicObject" GridLines="@GridLine.Both" @ref="DefaultGrid"
                TValue="ExpandoObject" Toolbar="@(new List<string>() { "Add","Edit", "Delete", "Update", "Cancel","Search","Print" })" AllowFiltering="true"
                AllowGrouping="true" AllowMultiSorting="true" AllowSorting="true" AllowReordering="true" AllowTextWrap="true" AllowResizing="true" AllowPdfExport="true" AllowExcelExport="true">
            <GridEvents OnActionBegin="ActionBeginAsync" TValue="ExpandoObject"></GridEvents>
            <GridEditSettings AllowAdding="true" AllowDeleting="true" AllowEditing="true" Mode="EditMode.Normal"></GridEditSettings>
            <GridColumns>
                @foreach (DataColumn col in dtEmployeeList.Columns)
                {
                    switch (col.DataType.FullName)
                    {
                        case "System.Int64":
                            <GridColumn Field="@col.ToString()" Type="ColumnType.Number" HeaderTextAlign="@TextAlign.Center" TextAlign="@TextAlign.Right" AllowFiltering="false">
                                <FilterTemplate></FilterTemplate>
                            </GridColumn>
                            break;
                        case "System.DateTime":
                            <GridColumn Field="@col.ToString()" Format="MM/dd/yyyy" HeaderTextAlign="@TextAlign.Center" Type="ColumnType.Date" AllowFiltering="true">
                                @*<FilterTemplate>
                                        <Syncfusion.Blazor.Calendars.SfDatePicker TValue="DateTime" Format="d"></Syncfusion.Blazor.Calendars.SfDatePicker>
                                    </FilterTemplate>*@
                            </GridColumn>
                            break;
                        case "System.String":
                            <GridColumn Field="@col.ToString()" HeaderTextAlign="@TextAlign.Center" Type="ColumnType.String" AllowFiltering="true"></GridColumn>
                            break;
                    }
                }

            </GridColumns>
        </SfGrid>
    }
</div>